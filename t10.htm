<!DOCTYPE html><html lang="ru" dir="ltr" spellcheck><head><!--#include file="h.htm"--><meta name="description" content="Пиццикато Алексея Лота. Полезные высказывания из книги 'Факты и заблуждения профессионального программирования' Гласса."><meta name="keywords" content="сайт алексея лота, гласса, технологии, факты и заблуждения, профессионального программирования, правила разработки, программного обеспечения, алексей лот"><title>Полезные высказывания из книги "Факты и заблуждения профессионального программирования" Гласса</title></head><body><header><h1 class=m>Пиццикато Алексея Лота</h1><nav><a href="p.htm">Главная</a><a href="m.htm">Песни</a><a href="l.htm">Психология</a><a href="r.htm">Рассказы</a><a href="b.htm">Религия</a><a href="s.htm">Стихотворения</a><a id="i" href="t.htm">Технологии</a><a href="f.htm">Философия</a><a href="i.htm">Фотография</a></nav></header><article id="c"><h2 class=m>Полезные высказывания из книги "Факты и заблуждения профессионального программирования" Гласса</h2><div id="w">Хороший менеджмент важнее хорошей технологии.<br><br>Те специалисты, которые действительно хороши в том, что они делают, и в то же время находятся на дне служебной иерархии, обладают возможностью, которой не имеет никто другой в этой пирамиде: их нельзя понизить в должности - в этой позиции скрыта большая сила.<br><br>Люди важнее, чем средства, методы и процесс.<br><br>Для пользователя важны высокие умственные способности и одержимость разработчика желанием заставить программу работать именно так, как она должна, - всё остальное вторично.<br><br>Лучшие программисты до 28 раз превосходят слабейших, но оплата их труда не бывает соразмерной, поэтому лучший программист - самое выгодное приобретение в индустрии ПО.<br><br>Корреляция между результатами тестов и показателями на рабочем месте равна нулю.<br><br>Корреляция между оценками по информатике и производительностью труда тоже ужасна.<br><br>Если проект не укладывается в сроки, то добавление рабочей силы задержит его ещё больше.<br><br>Разработка ПО - это интенсивная умственная деятельность, и среда, в которой она проходит, должна способствовать мышлению.<br><br>То, что можно надёжно измерить ("твёрдое"), обладает свойствами перетягивать внимание от того, что нельзя точно измерить (от "мягкого").<br><br>Рекламный звон вокруг инструментов и методов ("дешевле, лучше быстрее", "новое лучше старого") - это чума индустрии ПО, а реальное увеличение производительности и качества - от 5% до 35%.<br><br>Изучение нового метода или средства сначала понижает производительность программистов и качество продукта (см. кривую обучения - learning curve).<br><br>Назовите любую пропагандируемую концепцию, и найдётся кто-то, кто будет утверждать, что проекты становятся неуправляемыми именно потому, что она мало применяется.<br><br>"Оптимистичная оценка" является главной причиной нарушения сроков выполнения в 51% проектов.<br><br>Сначала требования, потом - оценка.<br><br>Можно ли оценить время и затраты на решение задачи, не имея о ней представления?<br><br>70% оценок делаются кем-то, кто связан с отделом по работе с пользователями, а 4% приходятся на проектную команду.<br><br>Оценки в проектах ПО желательно корректировать впоследствии.<br><br>Правильно оценивать никто не будет, поэтому нет причин беспокоиться о том, что проекты ПО не завершаются в сроки, задаваемые оценками.<br><br>В нашей современной культуре принято во что бы то ни стало укладываться в сроки (невозможные), жертвуя ради этого завершенностью и качеством.<br><br>Создание полностью универсального компонента для повторного использования в крупном масштабе - сложная задача.<br><br>Универсальные решения требуют в разы больше времени.<br><br>Модификация повторно используемого кода крайне чревата ошибками.<br><br>Решение модифицировать пакетную программную систему от стороннего производителя практически всегда ошибочно.<br><br>Если код ПО предстоит модифицировать на 20-25% или больше, то проще и дешевле начать всё заново и создать новый продукт.<br><br>Разработка ПО - это деятельность на 80% интеллектуальная и на 20% техническая.<br><br>Требования должны меняться в процессе.<br><br>Важно отказаться от обречённых на неудачу попыток создать ПО без ошибок, чтобы сконцентрироваться на более реалистичных и достижимых целях.<br><br>Нужно применять анализаторы тестового покрытия.<br><br>За час можно сделать ревью примерно 100 строк кода.<br><br>Инспекции могут приводить к спорам, ухудшающим моральный дух команды.<br><br>Стоимость сопровождения - в среднем 60% стоимости ПО, из них 60% - на модернизацию.<br><br>Сопровождение более трудоёмко, чем разработка.<br><br>Жизненный цикл разработки: 20% - требования, 20% - проектирование, 20% - кодирование, 40% - устранение ошибок.<br><br>Улучшение качества разработки ПО приводит к тому, что сопровождения становится больше из-за облегчения внесения большого количества изменений в связи с применением обновлённого инструментария и подходов.<br><br>Качество ПО есть совокупность свойств:<br>1.Переносимость означает, что программный продукт можно без труда перенести на другую платформу;<br>2.Надёжность - это свойство программного продукта надлежащим образом выполнять свои функции;<br>3.Под эффективностью программного продукта понимают экономное расходование им времени и занимаемого места;<br>4.Принятие в расчёт человеческого фактора (что называют также словом "юзабилити") подразумевает, что с программным продуктом легко и удобно работать;<br>5.Тестируемость ПО есть свойство, характеризующее лёгкость его тестирования;<br>6.Понятность ПО - это свойство, характеризующее, насколько легко (или трудно) специалисту, сопровождающему программный продукт, понять его работу;<br>7.Модифицируемым называют ПО, изменение которого не вызывает трудностей.<br><br>Удовлетворение пользователя=выполнение требований + своевременная поставка + приемлемая стоимость + качественный продукт.<br><br>Эффекивность кода на ЯВУ, скомпилированного с оптимизацией, может достигать более 90% аналогичного ассемблерного кода (спор решён в 70-х).<br><br>Невозможно управлять тем, что невозможно измерить, - заблуждение.<br><br>В обучении программированию важно учить сначала читать код.<br></div></article><br><footer>&copy;&nbsp;<i>Copyright&nbsp;<a href="https://алексейлот.рф">алексейлот.рф</a>&nbsp;-&nbsp;возьми главную ноту</i></footer></body></html>
